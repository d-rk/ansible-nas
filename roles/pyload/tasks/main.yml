---
- name: Create pyLoad Directories
  file:
    path: "{{ item }}"
    state: directory
    # mode: 0755
  with_items:
    - "{{ pyload_config_directory }}"
    - "{{ pyload_download_directory }}"

- name: Create apprise config for gotify notifications
  copy:
    content: "gotifys://{{ gotify_hostname }}.{{ ansible_nas_domain }}/{{ pyload_gotify_token }}"
    dest: "{{ pyload_config_directory }}/apprise.conf"
  when: pyload_gotify_token|length > 0

- name: Enable apprise mod for docker image
  set_fact:
    pyload_docker_mods: "{{ 'linuxserver/mods:universal-apprise' if (pyload_gotify_token|length > 0) else '' }}"

- name: pyLoad Docker Container
  docker_container:
    name: pyload
    image: linuxserver/pyload
    pull: true
    volumes:
      - "{{ pyload_config_directory }}:/config:rw"
      - "{{ pyload_download_directory }}:/downloads:rw"
    ports:
      - "{{ pyload_port }}:8000"
      - "{{ pyload_thrift_backend_port }}:7227"
      - "{{ pyload_clicknload_port }}:9666"
    env:
      DOCKER_MODS: "{{ pyload_docker_mods }}"
      TZ: "{{ ansible_nas_timezone }}"
      PUID: "{{ pyload_user_id }}"
      PGID: "{{ pyload_group_id }}"
    restart_policy: unless-stopped
    memory: "{{ pyload_memory }}"
    labels:
      traefik.enable: "{{ pyload_available_externally }}"
      traefik.http.routers.pyload.rule: "Host(`{{ pyload_hostname }}.{{ ansible_nas_domain }}`)"
      traefik.http.routers.pyload.tls.certresolver: "letsencrypt"
      traefik.http.routers.pyload.tls.domains[0].main: "{{ ansible_nas_domain }}"
      traefik.http.routers.pyload.tls.domains[0].sans: "*.{{ ansible_nas_domain }}"
      traefik.http.services.pyload.loadbalancer.server.port: "8000"
